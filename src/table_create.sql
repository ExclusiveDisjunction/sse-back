CREATE TABLE IF NOT EXISTS USERS (
    U_ID INTEGER PRIMARY KEY,
    USERNAME TEXT NOT NULL,
    PASSWD BLOB NOT NULL,
    SALT BLOB NOT NULL
);

CREATE TABLE IF NOT EXISTS NODES (
    N_ID INTEGER PRIMARY KEY,
    X REAL NOT NULL,
    Y REAL NOT NULL,
    NODE_NAME TEXT,
    NODE_GROUP TEXT DEFAULT NULL,
    IS_PATH INTEGER
    
    CONSTRAINT NODE_KIND CHECK (IS_PATH IN (0, 1))
);

CREATE TABLE IF NOT EXISTS NODE_TAGS (
    TAG_ID INTEGER PRIMARY KEY,
    N_ID INTEGER NOT NULL,
    TAG TEXT NOT NULL,
    
    FOREIGN KEY (N_ID) REFERENCES NODES (N_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ONE_TAG UNIQUE (N_ID, TAG)
);

CREATE TABLE IF NOT EXISTS PATH_PAIRS (
    PAIR_ID INTEGER PRIMARY KEY,
    SOURCE INTEGER NOT NULL,
    DESTINATION INTEGER NOT NULL,

    FOREIGN KEY (SOURCE) REFERENCES NODES (N_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (DESTINATION) REFERENCES NODES (N_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ONE_PAIR UNIQUE (SOURCE, DESTINATION)
);

CREATE TABLE IF NOT EXISTS PATH_WEIGHTS (
    PAIR_ID INTEGER PRIMARY KEY,
    WEIGHT_VALUE REAL NOT NULL,

    FOREIGN KEY (PAIR_ID) REFERENCES PATH_PAIRS (PAIR_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS PATH_PATHS (
    PAIR_ID INTEGER NOT NULL,
    SEQ_NUM INTEGER NOT NULL,
    N_ID INTEGER NOT NULL,

    PRIMARY KEY (PAIR_ID, SEQ_NUM),
    FOREIGN KEY (PAIR_ID) REFERENCES PATH_PAIRS (PAIR_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (N_ID) REFERENCES NODES (N_ID) ON DELETE CASCADE ON UPDATE CASCADE
);